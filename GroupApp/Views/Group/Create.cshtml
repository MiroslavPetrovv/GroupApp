@model GroupApp.ViewModels.Group.AddGroupInputModel
@using GroupApp.Data.Models.Enums
@{
    ViewData["Title"] = "Create Your Group";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="~/css/AddGroup.css">
<div class="container">
    <!-- Header -->
    <header>
        <a href="javascript:history.back()" class="back-link">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m15 18-6-6 6-6" /></svg>
            Back to Home
        </a>
    </header>

    <!-- Main Content -->
    <main>
        <h1>Create Your Group</h1>
        <p class="subtitle">Set up your community and start connecting with like-minded people.</p>

        <!-- Form Card -->
        <div class="form-card">
            <h2>Group Details</h2>
            <p class="text-muted">Fill in the information about your new group.</p>

            <form asp-controller="Group" asp-action="Create" method="post" enctype="multipart/form-data">
                <!-- Group Name -->
                <div class="form-group">
                    <label asp-for="Title" class="form-label">Title</label>
                    <input asp-for="Title" class="form-control" placeholder="Enter a name for your group">
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>

                <!-- Description -->
                <div class="form-group">
                    <label asp-for="Description" class="form-label">Description</label>
                    <textarea asp-for="Description" class="form-control" rows="4" placeholder="What is your group about? What will members do?"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <!-- Group Image -->
                <div class="form-group">
                    <label>Group Image</label>
                    <div class="upload-area" id="uploadArea">
                        <input type="file" asp-for="Banner" class="file-input" id="fileInput" accept="image/*">
                        <div class="upload-content">
                            <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4" /><polyline points="17 8 12 3 7 8" /><line x1="12" y1="3" x2="12" y2="15" /></svg>
                            <p class="upload-text">Drag and drop an image or click to browse</p>
                            <p class="upload-size">Recommended size: 1200 x 800px</p>
                            <button type="button" class="upload-button" onclick="document.getElementById('fileInput').click()">Upload Image</button>
                        </div>
                        <div class="preview-area" id="previewArea"></div>
                    </div>
                    <span asp-validation-for="Banner" class="text-danger"></span>
                </div>

                <!-- Category -->
                <div class="form-group">
                    <label asp-for="Category" class="form-label">Category</label>
                    <select asp-for="Category" class="custom-select" asp-items="@Html.GetEnumSelectList<GroupCategory>()">
                        <option value="">Select a category</option>
                    </select>
                    <span asp-validation-for="Category" class="text-danger"></span>
                </div>

                <input type="hidden" asp-for="CreatedAt" />

                <div class="form-submit">
                    <button type="submit">Create Group</button>
                </div>
            </form>
        </div>
    </main>
</div>

@section Scripts {
    <script>
        // Drag and drop functionality
        const dropZone = document.querySelector('.upload-area');
        const fileInput = document.getElementById('fileInput');

        dropZone.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropZone.classList.add('drag-over');
        });

        dropZone.addEventListener('dragleave', () => {
            dropZone.classList.remove('drag-over');
        });

        dropZone.addEventListener('drop', (e) => {
            e.preventDefault();
            dropZone.classList.remove('drag-over');

            if (e.dataTransfer.files.length) {
                fileInput.files = e.dataTransfer.files;
                updatePreview(e.dataTransfer.files[0]);
            }
        });

        fileInput.addEventListener('change', (e) => {
            if (e.target.files.length) {
                updatePreview(e.target.files[0]);
            }
        });

        function updatePreview(file) {
            if (file.type.startsWith('image/')) {
                const reader = new FileReader();
                reader.onload = (e) => {
                    dropZone.style.backgroundImage = `url(${e.target.result})`;
                    dropZone.style.backgroundSize = 'cover';
                    dropZone.style.backgroundPosition = 'center';
                    dropZone.innerHTML = '';
                    const previewArea = document.getElementById('previewArea');
                    previewArea.classList.add('show');
                    previewArea.innerHTML = `<img src="${e.target.result}" alt="Image Preview" />`;
                };
                reader.readAsDataURL(file);
            }
        }
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
